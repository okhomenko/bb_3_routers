// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', './item'], function(Backbone, ItemView) {
    var View;
    View = (function(_super) {

      __extends(View, _super);

      function View() {
        return View.__super__.constructor.apply(this, arguments);
      }

      View.prototype.template = '<h1>\n  <a href=\'/locations\'>\n    Locations\n  </a></h1>\n<ul class=\'list\'>\n</ul>';

      View.prototype.initialize = function() {
        _.bindAll(this);
        return this.collection.on('reset', this.renderAll);
      };

      View.prototype.render = function(done) {
        var content;
        content = this.template;
        this.$el.html(content);
        this.$list = this.$('.list');
        if (typeof done === "function") {
          done(this.el);
        }
        return this;
      };

      View.prototype.renderAll = function() {
        var _this = this;
        this.collection.each(function(model) {
          return _this.renderOne(model);
        });
        return this;
      };

      View.prototype.renderOne = function(model) {
        var view,
          _this = this;
        view = new ItemView({
          model: model
        });
        return view.render(function(el) {
          return _this.$list.append(el);
        });
      };

      return View;

    })(Backbone.View);
    return View;
  });

}).call(this);
